Оптимизировать конфигурацию сайта WordPress. Использовать приёмы клиентской и серверной оптимизации.

Описание/Пошаговая инструкция выполнения домашнего задания:
Инструкция:


1.	Рассмотрите, какие возможности по клиентской оптимизации вы можете применить для текущей конфигурации.

В рамках клиентской оптимизации выполнен переход на использование последнего TLS протокола для оптимизации времени обмена пакетами
ssl_protocols TLSv1.3;
Результат на оптимизацию:
Оптимизация скорости подключения клиента к сайту

2.	Внесите изменения в настройки сайта.


brotli_comp_level 7;
brotli_types text/plain text/xml text/css application/javascript application/json image/x-icon image/svg+xml;
Результат на оптимизацию: уменьшение веса текстовых файлов 




Для использования более легких картинок клиентом при поддержке браузером
map $http_accept $webp_suffix {
 "~*webp" ".webp";
 }
 map $http_accept $avif_suffix {
 "~*avif" ".avif";
 "~*webp" ".webp";
 }
try_files $uri$avif_suffix $uri$webp_suffix $uri =404;
Результат на оптимизацию: при поддержке браузером клиента первостепенно будет использоваться более легковесная версия картинки


Для кеширования запросов сайта
proxy_cache_valid 200 1h;
proxy_cache_lock on;
proxy_cache_min_uses 2;
proxy_ignore_headers "Cache-Control" "Expires";

Результат на оптимизацию: кеширование запроса при обращении от 2 пользователей для уменьшения времени ответа. Ответ не пойдет в backend , а сразу отправиться к клиенту из кеша. Что уменьшает время ответа сервера.



3.	Настройте серверное кэширование одной страницы сайта.
Согласно заданию, одна страница должна иметь серверное кеширование
add_header Cache-Control "max-age=31536000, public, no-transform, immutable";





